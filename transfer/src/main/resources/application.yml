server:
  port: 8090

spring:
  kafka:
    bootstrap-servers:
      - localhost:9092
#      - localhost:9092
    consumer:
      group-id: example-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    admin:
      auto-create: true
  application:
    name: transfer
  profiles:
    active: dev
  config:
    import: optional:configserver:http://config:1234@localhost:9393
  cache:
    redis:
      ttl: 10000000  
  data:
    redis:
#      host: 3.35.132.32
#      port: 6379  
#      password: neobns1!
      host: localhost
      port: 6379
      password: 
  rabbitmq:
      host: localhost
      port: 5672
      username: guest
      password: guest

# 주석처리 한 부분은 config server의 prperties에 존재
#eureka:
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://eureka:1234@localhost:8761/eureka

#mybatis:
#  mapper-locations: classpath:mappers/*.xml
#  configuration:
#    map-underscore-to-camel-case: true

#management:
#  httpexchanges:
#    recording:
#      enabled: true
#  endpoints:
#    web:
#      exposure:
##        include: "*"
#        include: health, info, metrics, prometheus, busrefresh
#      base-path: /actuator
#  endpoint:
#    metrics:
#      enabled: true
#    health:
#      show-details: always
#    prometheus:
#      enabled: true
#    env:
#      enabled: true
#  info:
#    env:
#      enabled: true
#  metrics:
#    enable:
#      hikaricp: true
#
values:
  queue: example-queue
  exchange: example-exchange
  routingKey: example-routing-key
