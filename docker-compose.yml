services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
  
  rabbitmq:
    image: rabbitmq:4.0.4-management
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
  
  kafkaconsumer:
    image: neobnsrn5/kafkaconsumer:s1
    container_name: KafkaConsumer
    ports:
      - "18788:18788"
    depends_on:
      - kafka

  rabbitmqconsumer:
    image: neobnsrn5/rabbitconsumer:s1
    container_name: RabbitMQConsumer
    ports:
      - "18988:18988"
    depends_on:
      - rabbitmq

  sonarqube:
    image: sonarqube
    container_name: sonarqube
    ports:
      - "9099:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  # config:
  #   image: neobnsrn5/config:s1
  #   container_name: config
  #   ports:
  #     - "9393:9393"
  #   depends_on:
  #     - eureka
  
  # eureka:
  #   image: neobnsrn5/eureka:s1
  #   container_name: eureka
  #   ports:
  #     - "8761:8761"
